import java.text.NumberFormat;
import java.util.*;
import cs_1c.*;

class Foothill
{
   static Random rand = new Random();
   public static void main(String[] args)
   {
      long startTime, stopTime;
      String timeOne, timeTwo, timeThree, timeFour, timeFive, timeSix;
      NumberFormat tidy = NumberFormat.getInstance(Locale.US);
      tidy.setMaximumFractionDigits(4);
      
      Integer[] arrayOne = fillArray(20000);
      Integer[] arrayTwo = fillArray(75000);
      Integer[] arrayThree = fillArray(150000);
      Integer[] arrayFour = fillArray(500000);
      Integer[] arrayFive = fillArray(1000000);
      Integer[] theBigOne = fillArray(2000000);

      System.out.println("\t20000\t75000\t150000\t500000\t"
            + "1000000\t2000000");
      for (int j = 2; j <= 300; j += 2)
      {
         FHsort.setRecursionLimit(j);
         
         startTime = System.nanoTime();
         FHsort.quickSort(arrayOne);
         stopTime = System.nanoTime();
         timeOne = tidy.format( (stopTime - startTime) / 1e9);
         
         startTime = System.nanoTime();
         FHsort.quickSort(arrayTwo);
         stopTime = System.nanoTime();
         timeTwo = tidy.format( (stopTime - startTime) / 1e9);
         
         startTime = System.nanoTime();
         FHsort.quickSort(arrayThree);
         stopTime = System.nanoTime();
         timeThree = tidy.format( (stopTime - startTime) / 1e9);
         
         startTime = System.nanoTime();
         FHsort.quickSort(arrayFour);
         stopTime = System.nanoTime();
         timeFour = tidy.format( (stopTime - startTime) / 1e9);
         
         startTime = System.nanoTime();
         FHsort.quickSort(arrayFive);
         stopTime = System.nanoTime();
         timeFive = tidy.format( (stopTime - startTime) / 1e9);
         
         startTime = System.nanoTime();
         FHsort.quickSort(theBigOne);
         stopTime = System.nanoTime();
         timeSix = tidy.format( (stopTime - startTime) / 1e9);
         
         System.out.println(j + ": \t" + timeOne + "\t" + timeTwo + "\t"
               + timeThree + "\t" + timeFour + "\t" + timeFive + "\t"
               + timeSix + "\t");
         
      }

      
   }
   public static Integer[] fillArray(int size)
   {
      int high = 1000;
      Integer[] temp = new Integer[size];
      for(int i = 0; i < size; i++)
         temp[i] = rand.nextInt(high);
      return temp;
   }
   
}

/* 20000 75000 150000   500000   1000000  2000000
2:    0.0051   0.027 0.0573   0.2019   0.3735   0.4626   
4:    0.0013   0.0044   0.0099   0.0559   0.1386   0.3148   
6:    0.0008   0.0041   0.011 0.0504   0.1246   0.3002   
8:    0.0009   0.0044   0.0096   0.0483   0.1202   0.2965   
10:   0.0008   0.0041   0.0088   0.0465   0.1223   0.2926   
12:   0.0008   0.0037   0.009 0.0481   0.1184   0.2955   
14:   0.0008   0.0036   0.009 0.0504   0.1201   0.2915   
16:   0.0012   0.0045   0.0103   0.05  0.1125   0.2891   
18:   0.0007   0.0035   0.0101   0.0465   0.1148   0.2784   
20:   0.0007   0.0035   0.0088   0.045 0.1199   0.2801   
22:   0.001 0.0053   0.0087   0.0485   0.1257   0.2798   
24:   0.0007   0.0034   0.0082   0.0431   0.1123   0.283 
26:   0.0009   0.0039   0.0103   0.0521   0.1452   0.2992   
28:   0.0007   0.0035   0.0086   0.0475   0.1298   0.3584   
30:   0.0007   0.0054   0.0098   0.0541   0.1763   0.3022   
32:   0.0008   0.0044   0.0087   0.045 0.1122   0.2736   
34:   0.0008   0.0033   0.0079   0.0503   0.1155   0.2741   
36:   0.0007   0.0033   0.0074   0.04  0.1058   0.2597   
38:   0.0006   0.0031   0.008 0.0399   0.1199   0.2665   
40:   0.0009   0.0033   0.0076   0.0423   0.1112   0.2618   
42:   0.0006   0.004 0.0072   0.0391   0.109 0.2702   
44:   0.0006   0.0034   0.0076   0.0418   0.1078   0.2596   
46:   0.0006   0.0031   0.0069   0.0405   0.1083   0.287 
48:   0.0007   0.0044   0.0102   0.0417   0.1087   0.2651   
50:   0.0006   0.0034   0.0073   0.0404   0.1089   0.2687   
52:   0.0006   0.0033   0.0087   0.046 0.1172   0.2803   
54:   0.0009   0.0031   0.0077   0.042 0.1107   0.2658   
56:   0.0007   0.0032   0.0067   0.0423   0.1095   0.2771   
58:   0.0006   0.0033   0.0068   0.0382   0.1085   0.2623   
60:   0.0006   0.0029   0.0066   0.0399   0.1138   0.2606   
62:   0.0006   0.0032   0.0066   0.036 0.1039   0.2526   
64:   0.0006   0.0028   0.0067   0.0382   0.101 0.2508   
66:   0.0006   0.0033   0.0074   0.0357   0.1018   0.255 
68:   0.0007   0.0029   0.0071   0.0364   0.1017   0.2484   
70:   0.0006   0.003 0.0078   0.0358   0.106 0.2526   
72:   0.0007   0.0029   0.0065   0.0383   0.0998   0.2659   
74:   0.0006   0.0031   0.008 0.0383   0.1044   0.2474   
76:   0.0008   0.0028   0.0071   0.0425   0.1087   0.2527   
78:   0.0006   0.0027   0.0076   0.0355   0.1041   0.2546   
80:   0.0007   0.0035   0.0062   0.0344   0.1015   0.2492   
82:   0.0006   0.0032   0.0066   0.0373   0.0994   0.2503   
84:   0.0006   0.003 0.0066   0.035 0.1025   0.2458   
86:   0.0006   0.0028   0.0071   0.0353   0.101 0.2564   
88:   0.0008   0.0029   0.0067   0.0354   0.0985   0.2461   
90:   0.0006   0.0027   0.007 0.0356   0.098 0.2489   
92:   0.0006   0.0026   0.0062   0.0361   0.0967   0.2551   
94:   0.0008   0.0028   0.0075   0.0399   0.1028   0.2618   
96:   0.0006   0.0028   0.0065   0.0394   0.0989   0.2518   
98:   0.0006   0.0034   0.0078   0.0458   0.11  0.247 
100:  0.0006   0.0031   0.0067   0.0354   0.1105   0.2616   
102:  0.0007   0.0033   0.0072   0.0417   0.1089   0.2561   
104:  0.0006   0.0034   0.0062   0.0366   0.0982   0.2444   
106:  0.0006   0.003 0.0065   0.04  0.1177   0.2475   
108:  0.0006   0.003 0.0061   0.0355   0.1011   0.2601   
110:  0.0006   0.0032   0.0091   0.0382   0.1003   0.2549   
112:  0.0008   0.003 0.006 0.0358   0.1016   0.2494   
114:  0.0008   0.003 0.006 0.0375   0.1023   0.246 
116:  0.0006   0.0029   0.0061   0.036 0.1105   0.268 
118:  0.0006   0.0027   0.0063   0.0353   0.1009   0.2519   
120:  0.0006   0.0026   0.0072   0.0369   0.0995   0.2589   
122:  0.0008   0.0029   0.0058   0.0337   0.1033   0.2424   
124:  0.0006   0.0032   0.0065   0.0344   0.0995   0.24  
126:  0.0007   0.0028   0.0062   0.0343   0.1007   0.2366   
128:  0.0007   0.0034   0.006 0.0323   0.0967   0.2328   
130:  0.0006   0.0026   0.0066   0.0368   0.0932   0.232 
132:  0.0008   0.0032   0.0059   0.0377   0.0947   0.231 
134:  0.0006   0.0026   0.0064   0.0356   0.0914   0.2383   
136:  0.0006   0.0027   0.0067   0.0325   0.0939   0.2455   
138:  0.0006   0.0027   0.0062   0.0369   0.0936   0.2344   
140:  0.0006   0.0026   0.0061   0.0352   0.092 0.2423   
142:  0.0007   0.0025   0.007 0.0331   0.0936   0.2344   
144:  0.0006   0.0028   0.0064   0.0361   0.1042   0.2448   
146:  0.0009   0.0032   0.0062   0.0354   0.0996   0.2406   
148:  0.0008   0.0029   0.0058   0.0329   0.0963   0.2425   
150:  0.0008   0.0034   0.0059   0.0381   0.0959   0.2324   
152:  0.0006   0.0026   0.007 0.0427   0.0933   0.2334   
154:  0.0007   0.0025   0.008 0.0407   0.1061   0.2429   
156:  0.0006   0.0028   0.0058   0.0376   0.0961   0.2313   
158:  0.0006   0.0035   0.0057   0.0341   0.1037   0.2299   
160:  0.0006   0.0025   0.0057   0.0338   0.0919   0.2263   
162:  0.0006   0.0025   0.006 0.0419   0.1005   0.2411   
164:  0.0006   0.0025   0.0054   0.0339   0.096 0.2449   
166:  0.0006   0.0025   0.006 0.0332   0.1068   0.26  
168:  0.0008   0.0036   0.0061   0.0339   0.0971   0.2424   
170:  0.0006   0.0028   0.0053   0.0326   0.0952   0.2316   
172:  0.0006   0.0025   0.0054   0.034 0.0929   0.2392   
174:  0.0008   0.0025   0.0053   0.0346   0.1002   0.2386   
176:  0.0006   0.0025   0.0059   0.0329   0.1003   0.2307   
178:  0.0006   0.0034   0.0055   0.0331   0.0968   0.2451   
180:  0.0008   0.0032   0.0055   0.0332   0.1027   0.2356   
182:  0.0006   0.0025   0.0053   0.033 0.0974   0.2306   
184:  0.0006   0.0025   0.0052   0.0398   0.0972   0.2412   
186:  0.0006   0.0025   0.0068   0.0351   0.095 0.2324   
188:  0.0006   0.0026   0.0053   0.0331   0.0924   0.2332   
190:  0.0006   0.0025   0.0053   0.0374   0.092 0.2487   
192:  0.0006   0.0028   0.0057   0.0343   0.0945   0.2365   
194:  0.0006   0.0025   0.0053   0.0336   0.0948   0.2373   
196:  0.0006   0.0029   0.0056   0.0342   0.099 0.2357   
198:  0.0006   0.0025   0.0063   0.032 0.0923   0.2291   
200:  0.0006   0.0025   0.0065   0.0328   0.0941   0.2357   
202:  0.0006   0.0025   0.0061   0.0315   0.0923   0.2312   
204:  0.0006   0.0025   0.0053   0.0346   0.0912   0.2319   
206:  0.0006   0.003 0.0062   0.0353   0.0972   0.2322   
208:  0.0006   0.0025   0.0052   0.035 0.0951   0.229 
210:  0.0006   0.0025   0.0059   0.0331   0.0909   0.2372   
212:  0.0006   0.0033   0.0054   0.0334   0.094 0.2287   
214:  0.0007   0.0035   0.0053   0.031 0.0926   0.2396   
216:  0.0006   0.0025   0.0054   0.0333   0.0951   0.2368   
218:  0.0006   0.0027   0.0053   0.0313   0.0905   0.2265   
220:  0.0006   0.0027   0.0059   0.0307   0.0952   0.232 
222:  0.0006   0.0034   0.0062   0.033 0.091 0.2381   
224:  0.0006   0.0028   0.0055   0.0323   0.0936   0.2257   
226:  0.0006   0.0028   0.0055   0.0348   0.0923   0.2285   
228:  0.0009   0.0028   0.0054   0.0323   0.0979   0.2309   
230:  0.0006   0.0026   0.006 0.0333   0.0924   0.23  
232:  0.0006   0.0025   0.0062   0.0317   0.0897   0.24  
234:  0.0007   0.0034   0.0055   0.0326   0.0902   0.2282   
236:  0.0006   0.0028   0.0059   0.0323   0.0914   0.2342   
238:  0.0007   0.0028   0.0053   0.0333   0.0997   0.2472   
240:  0.0006   0.0025   0.0054   0.0327   0.0997   0.2354   
242:  0.0008   0.0029   0.0054   0.0314   0.1036   0.2315   
244:  0.0006   0.0027   0.0064   0.0331   0.099 0.228 
246:  0.0007   0.0027   0.0052   0.0328   0.0912   0.2275   
248:  0.0006   0.0031   0.0052   0.032 0.0898   0.231 
250:  0.0007   0.0032   0.0067   0.0305   0.0905   0.2237   
252:  0.0006   0.0025   0.0057   0.0323   0.0894   0.2224   
254:  0.0006   0.0026   0.0057   0.0314   0.0901   0.2227   
256:  0.0006   0.0026   0.0059   0.0321   0.0914   0.2239   
258:  0.0006   0.0025   0.0052   0.0328   0.0895   0.2143   
260:  0.0006   0.0031   0.0061   0.031 0.0905   0.2234   
262:  0.0007   0.0028   0.0052   0.0311   0.0901   0.2195   
264:  0.0006   0.0027   0.0052   0.0335   0.0857   0.2146   
266:  0.0009   0.0025   0.0059   0.031 0.0874   0.226 
268:  0.0006   0.0025   0.0053   0.0321   0.088 0.2131   
270:  0.0008   0.0026   0.0055   0.0312   0.0874   0.2289   
272:  0.0008   0.0025   0.0055   0.0344   0.0874   0.2228   
274:  0.0006   0.0029   0.0058   0.0327   0.0858   0.2196   
276:  0.0008   0.0031   0.0065   0.0338   0.0969   0.2548   
278:  0.0007   0.0027   0.0071   0.042 0.1172   0.2185   
280:  0.0006   0.0026   0.0054   0.0304   0.0887   0.2257   
282:  0.0008   0.0027   0.0058   0.0306   0.0856   0.2193   
284:  0.0006   0.0024   0.0052   0.0377   0.0893   0.22  
286:  0.0006   0.0025   0.0057   0.0307   0.087 0.2132   
288:  0.0007   0.0027   0.0052   0.0322   0.0866   0.2238   
290:  0.0006   0.0025   0.0057   0.0312   0.0859   0.2234   
292:  0.0006   0.0025   0.0052   0.0306   0.0885   0.221 
294:  0.0006   0.0024   0.0052   0.0304   0.0877   0.2316   
296:  0.0006   0.0031   0.0059   0.031 0.087 0.2189   
298:  0.0006   0.0025   0.0056   0.0299   0.0873   0.2183   
300:  0.0006   0.0024   0.0057   0.0318   0.1014   0.2938   

I found 182-212 to be generally the most stable for all
array sizes between 20000 and 1000000, but strangely 
2000000 isn't as consistent as the other values - in 
fact, I couldn't really find a range where the values
are consistent. Most likely this points to an error in 
my coding but I sure hope that isn't the case!*/